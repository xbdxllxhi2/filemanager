{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nlet LoginComponent = class LoginComponent {\n  constructor(http, router, activatedRoute) {\n    this.http = http;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.user = {\n      username: '',\n      password: ''\n    };\n    this.loading = false;\n    this.loginError = false;\n    this.loginMessage = 'Invalid Username or Password!';\n    this.logout = this.activatedRoute.snapshot.queryParams['logout'];\n    if (this.logout != null && this.logout != undefined) {\n      this.loginError = true;\n      if (this.logout == 'false') this.loginMessage = 'You have either logged out or your previous session has expired. Please login again to continue!';\n      if (this.logout == 'true') this.loginMessage = 'You have successfully logged out!';\n    }\n  }\n  ngOnInit() {\n    let value = sessionStorage.getItem('loggedInUser');\n    if (value != null && value != undefined) this.router.navigate(['browser']);\n  }\n  login(e) {\n    e.preventDefault();\n    this.loading = true;\n    this.loginError = false;\n    if (this.user.username == 'sample' && this.user.password == 'sample') {\n      this.loading = false;\n      sessionStorage.setItem('loggedInUser', JSON.stringify({\n        fname: 'Demo',\n        lname: 'User'\n      }));\n      this.router.navigate(['browser']);\n    } else {\n      this.loginError = true;\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n}), __metadata(\"design:paramtypes\", [HttpClient, Router, ActivatedRoute])], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}