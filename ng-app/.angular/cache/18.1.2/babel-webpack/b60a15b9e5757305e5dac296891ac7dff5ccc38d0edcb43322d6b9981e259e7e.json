{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../header/header.component\";\nfunction FileBrowserComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"i\", 16);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FileBrowserComponent_div_7_span_15_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 50)(1, \"a\", 51);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_span_15_li_5_Template_a_click_1_listener($event) {\n      const breadcrumb_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onBreadcrumbClick(breadcrumb_r5, $event));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const breadcrumb_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(breadcrumb_r5.name);\n  }\n}\nfunction FileBrowserComponent_div_7_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 19)(1, \"nav\", 42)(2, \"ol\", 43)(3, \"li\", 44);\n    i0.ɵɵelement(4, \"i\", 45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FileBrowserComponent_div_7_span_15_li_5_Template, 3, 1, \"li\", 46);\n    i0.ɵɵelementStart(6, \"li\", 47)(7, \"a\", 48);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_span_15_Template_a_click_7_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.refresh($event));\n    });\n    i0.ɵɵelement(8, \"i\", 49);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.breadcrumbs);\n  }\n}\nfunction FileBrowserComponent_div_7_ng_container_30_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 53)(1, \"a\", 54);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_ng_container_30_span_1_Template_a_click_1_listener($event) {\n      const dir_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onDirClick(dir_r7, $event));\n    });\n    i0.ɵɵelement(2, \"i\", 55);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 56);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_ng_container_30_span_1_Template_a_click_4_listener($event) {\n      const dir_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.deleteFolder(dir_r7, $event));\n    });\n    i0.ɵɵelement(5, \"i\", 57);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const dir_r7 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", dir_r7.name, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate1(\"title\", \"Delete folder \", dir_r7.name, \"\");\n  }\n}\nfunction FileBrowserComponent_div_7_ng_container_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FileBrowserComponent_div_7_ng_container_30_span_1_Template, 6, 3, \"span\", 52);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.dirs);\n  }\n}\nfunction FileBrowserComponent_div_7_ng_container_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 53);\n    i0.ɵɵtext(2, \" No Folders Available! \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FileBrowserComponent_div_7_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 58)(1, \"div\", 59)(2, \"p\", 60);\n    i0.ɵɵtext(3, \"No files available in the current directory.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction FileBrowserComponent_div_7_div_35_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 72)(1, \"a\", 73);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_div_35_div_1_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const file_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onFileClick(file_r10, $event));\n    });\n    i0.ɵɵelement(2, \"img\", 74);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"src\", ctx_r1.getFileUrl(file_r10), i0.ɵɵsanitizeUrl);\n  }\n}\nfunction FileBrowserComponent_div_7_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 61);\n    i0.ɵɵtemplate(1, FileBrowserComponent_div_7_div_35_div_1_Template, 3, 1, \"div\", 62);\n    i0.ɵɵelementStart(2, \"div\", 63)(3, \"a\", 64);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_div_35_Template_a_click_3_listener($event) {\n      const file_r10 = i0.ɵɵrestoreView(_r8).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onFileClick(file_r10, $event));\n    });\n    i0.ɵɵelement(4, \"i\", 65);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 66)(7, \"a\", 67);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_div_35_Template_a_click_7_listener($event) {\n      const file_r10 = i0.ɵɵrestoreView(_r8).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onFileDelete(file_r10, $event));\n    });\n    i0.ɵɵelement(8, \"i\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"a\", 68);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_div_35_Template_a_click_9_listener($event) {\n      const file_r10 = i0.ɵɵrestoreView(_r8).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onFileDownload(file_r10, $event));\n    });\n    i0.ɵɵelement(10, \"i\", 69);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"a\", 70);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_div_35_Template_a_click_11_listener($event) {\n      const file_r10 = i0.ɵɵrestoreView(_r8).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.copyPath(file_r10, $event));\n    });\n    i0.ɵɵelement(12, \"i\", 71);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const file_r10 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.validImgFile(file_r10.name));\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"fa-file\", !ctx_r1.validFile(file_r10.name))(\"fa-file-pdf\", file_r10.name.toLowerCase().indexOf(\".pdf\") != -1)(\"text-danger\", file_r10.name.toLowerCase().indexOf(\".pdf\") != -1)(\"fa-file-image\", ctx_r1.validImgFile(file_r10.name));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", file_r10.name, \" \");\n  }\n}\nfunction FileBrowserComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"span\", 19);\n    i0.ɵɵtext(3, \"Folders \");\n    i0.ɵɵelement(4, \"i\", 20);\n    i0.ɵɵtext(5);\n    i0.ɵɵelement(6, \"i\", 20);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 21)(9, \"button\", 22);\n    i0.ɵɵtext(10, \"Upload \");\n    i0.ɵɵelement(11, \"i\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"span\", 21)(13, \"input\", 24);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function FileBrowserComponent_div_7_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.filter, $event) || (ctx_r1.filter = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"input\", function FileBrowserComponent_div_7_Template_input_input_13_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFilter($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵtemplate(15, FileBrowserComponent_div_7_span_15_Template, 9, 1, \"span\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 26)(17, \"div\", 27)(18, \"div\", 28)(19, \"strong\");\n    i0.ɵɵtext(20, \"List of Folders \");\n    i0.ɵɵelementStart(21, \"a\", 29);\n    i0.ɵɵelement(22, \"i\", 30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(23, \"div\", 31)(24, \"div\", 32);\n    i0.ɵɵelement(25, \"input\", 33);\n    i0.ɵɵelementStart(26, \"div\", 34)(27, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function FileBrowserComponent_div_7_Template_button_click_27_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addFolder());\n    });\n    i0.ɵɵtext(28, \"Add\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(29, \"div\", 36);\n    i0.ɵɵtemplate(30, FileBrowserComponent_div_7_ng_container_30_Template, 2, 1, \"ng-container\", 3)(31, FileBrowserComponent_div_7_ng_container_31_Template, 3, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 37)(33, \"div\", 38);\n    i0.ɵɵtemplate(34, FileBrowserComponent_div_7_div_34_Template, 4, 0, \"div\", 39)(35, FileBrowserComponent_div_7_div_35_Template, 13, 10, \"div\", 40);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"div\", 41);\n    i0.ɵɵtext(37, \"Folders \");\n    i0.ɵɵelement(38, \"i\", 20);\n    i0.ɵɵtext(39);\n    i0.ɵɵelement(40, \"i\", 20);\n    i0.ɵɵtext(41);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.dirs.length, \" & Files \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.files.length, \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.filter);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.breadcrumbs == null ? null : ctx_r1.breadcrumbs.length) > 0);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.dirs.length > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.dirs.length == 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.files.length == 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.files);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.dirs.length, \" Files \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.files.length, \"\");\n  }\n}\nexport let FileBrowserComponent = /*#__PURE__*/(() => {\n  class FileBrowserComponent {\n    constructor(http, router, route) {\n      this.http = http;\n      this.router = router;\n      this.route = route;\n      this.dirs = [];\n      this.files = [];\n      this.filesCopy = [];\n      this.breadcrumbs = [];\n      this.selectedDir = {};\n      this.alertMessage = '';\n      this.alertSuccess = true;\n      this.dirMap = {};\n      this.filter = '';\n      this.loading = false;\n      this.ckEditorFuncNum = route.snapshot.queryParamMap.get('CKEditorFuncNum');\n      this.appId = route.snapshot.queryParamMap.get('appId');\n    }\n    ngOnInit() {\n      this.loggedInUser = null;\n      let value = sessionStorage.getItem('loggedInUser');\n      if (this.ckEditorFuncNum != null || this.ckEditorFuncNum != undefined) {\n        this.loading = false;\n        this.setContentRoot();\n      } else if (value == null || value == undefined) {\n        this.router.navigate(['login'], {\n          queryParams: {\n            'logout': 'false'\n          }\n        });\n        return;\n      } else {\n        this.loggedInUser = JSON.parse(sessionStorage.getItem('loggedInUser'));\n        this.setContentRoot();\n      }\n    }\n    setContentRoot() {\n      this.loading = true;\n      this.http.get(environment.serviceUrl + 'getFileRoot', {\n        responseType: 'text'\n      }).subscribe(resp => {\n        this.docbase = resp;\n        this.listFilesAndDirectories();\n      });\n    }\n    listFilesAndDirectories() {\n      if (!this.contentRoot) this.contentRoot = this.docbase;\n      let dirUrl = environment.serviceUrl + \"listDirectories?dir=\" + (this.contentRoot != this.docbase ? this.contentRoot : '');\n      let fileUrl = environment.serviceUrl + \"listFiles?dir=\" + (this.contentRoot != this.docbase ? this.contentRoot : '');\n      this.http.get(dirUrl).subscribe(resp => {\n        this.loading = false;\n        //console.log(resp);\n        if (resp.length > 0) {\n          this.dirs = resp;\n          this.breadcrumbs = [{\n            path: this.contentRoot == this.docbase ? '' : this.docbase,\n            name: this.contentRoot,\n            pathSeparator: resp[0].pathSeparator\n          }];\n          this.selectedDir = this.breadcrumbs[0];\n          this.setDirMap(this.selectedDir);\n          this.setBreadCrumbState();\n        }\n      });\n      this.http.get(fileUrl).subscribe(resp => {\n        //console.log(resp);\n        this.files = resp;\n        this.filesCopy = resp;\n      });\n    }\n    setDirMap(dir) {\n      if (dir.path.length > 0) this.dirMap[dir.path + dir.pathSeparator + dir.name] = dir;else this.dirMap[dir.name] = dir;\n    }\n    onDirClick(dir, e) {\n      this.loading = true;\n      if (e) e.preventDefault();\n      let urlPath = this.determineUrlPath(dir);\n      this.setDirMap(dir);\n      let dirUrl = environment.serviceUrl + \"listDirectories?dir=\" + (urlPath != this.contentRoot ? urlPath : '');\n      let fileUrl = environment.serviceUrl + \"listFiles?dir=\" + (urlPath != this.contentRoot ? urlPath : '');\n      this.http.get(dirUrl).subscribe(resp => {\n        this.loading = false;\n        //console.log(resp);\n        this.dirs = resp;\n      });\n      this.http.get(fileUrl).subscribe(resp => {\n        //console.log(resp);\n        this.files = resp;\n        this.filesCopy = resp;\n      });\n      this.resetBreadcrumbs(dir);\n      this.selectedDir = dir;\n    }\n    resetBreadcrumbs(dir) {\n      this.breadcrumbs = [];\n      let paths = dir.path.split(dir.pathSeparator);\n      if (this.contentRoot != this.docbase) paths = paths.filter(path => path != this.docbase);\n      paths.push(dir.name);\n      let dirPath = '';\n      for (let index = 0; index < paths.length; index++) {\n        const path = paths[index];\n        if (path != this.docbase) {\n          if (dirPath.length == 0) dirPath = dirPath + path;else dirPath = dirPath + dir.pathSeparator + path;\n        }\n        this.breadcrumbs.push({\n          name: path,\n          path: dirPath,\n          pathSeparator: dir.pathSeparator\n        });\n        if (this.breadcrumbs[0].name.trim() == '') this.breadcrumbs.splice(0, 1);\n        this.setBreadCrumbState();\n      }\n    }\n    setBreadCrumbState() {\n      setTimeout(() => {\n        $('.breadcrumb-item-link').attr('href', '#');\n        if ($('.breadcrumb-item-link').length > 0) $('.breadcrumb-item-link').last().removeAttr('href').addClass('disabled');\n      }, 250);\n    }\n    onBreadcrumbClick(selected, e) {\n      e.preventDefault();\n      let selectedIndex = this.breadcrumbs.findIndex(ele => ele.path == selected.path);\n      if (selectedIndex != -1) {\n        this.breadcrumbs = this.breadcrumbs.slice(0, selectedIndex + 1);\n        if (selected.name == this.docbase) this.onDirClick(this.dirMap[this.docbase + selected.path]);else this.onDirClick(this.dirMap[this.docbase + selected.pathSeparator + selected.path]);\n      }\n    }\n    getFileUrl(fileView) {\n      if (location.host.indexOf('localhost') != -1) return \"http://localhost:8080/filemanager/\" + \"getFile/\" + encodeURIComponent(fileView.name) + \"?filePath=\" + this.determineUrlPath(fileView);else return location.href.substring(0, location.href.indexOf('#')) + \"getFile/\" + encodeURIComponent(fileView.name) + \"?filePath=\" + this.determineUrlPath(fileView);\n    }\n    uploadFile() {\n      this.alertMessage = '';\n      this.alertSuccess = true;\n      var fileInput = document.getElementById('fileUpload');\n      var file = fileInput.files[0];\n      var formData = new FormData();\n      formData.append('file', file);\n      this.loading = true;\n      this.http.post(environment.serviceUrl + 'uploadFile?dir=' + this.determineUrlPath(this.selectedDir), formData).subscribe(resp => this.processResponse(resp));\n      setTimeout(() => {\n        $('#fileUpload').val('');\n      }, 0);\n    }\n    determineUrlPath(dir) {\n      // if (dir.name == this.contentRoot)\n      //   return \"\";\n      let urlPath = dir.name;\n      if (dir.path != dir.name && dir.path.length > 0) {\n        urlPath = dir.path + dir.pathSeparator + dir.name;\n      }\n      return encodeURIComponent(urlPath);\n    }\n    onFileDelete(fileView, e) {\n      if (e) e.preventDefault();\n      if (confirm(\"Delete File \" + fileView.name + \"?\")) {\n        this.alertMessage = '';\n        this.alertSuccess = true;\n        this.loading = true;\n        this.http.get(environment.serviceUrl + \"deleteFile?filePath=\" + this.determineUrlPath(fileView)).subscribe(resp => this.processResponse(resp));\n      }\n    }\n    onFileDownload(fileView, e) {\n      if (e) e.preventDefault();\n      this.alertSuccess = true;\n      this.alertMessage = '';\n      this.loading = true;\n      this.http.get(environment.serviceUrl + \"getFile/\" + fileView.name + \"?filePath=\" + this.determineUrlPath(fileView), {\n        responseType: 'blob'\n      }).subscribe(resp => {\n        this.loading = false;\n        let blob = new Blob([resp], {\n          type: 'application/octet-stream'\n        });\n        let link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = fileView.name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n    }\n    onFileClick(fileView, e) {\n      e.preventDefault();\n      let fileUrl = this.getFileUrl(fileView);\n      if (this.ckEditorFuncNum) {\n        //window.opener.CKEDITOR.tools.callFunction(this.ckEditorFuncNum, fileUrl);\n        window.opener.postMessage({\n          ckEditorFuncNum: this.ckEditorFuncNum,\n          fileUrl: fileUrl\n        }, \"*\");\n        window.close();\n      } else window.open(this.getFileUrl(fileView), '_blank');\n    }\n    onFilter(e) {\n      if (this.filesCopy.length > 0) {\n        if (this.filter.length > 0) {\n          let filtered = this.filesCopy.filter(file => file.name.toLowerCase().indexOf(this.filter.toLowerCase()) != -1);\n          this.files = filtered;\n        } else this.files = [...this.filesCopy];\n      }\n    }\n    validFile(fileName) {\n      let valid = false;\n      let validFileExtentions = ['.jpg', '.jpeg', '.png', '.gif', '.pdf'];\n      for (let index = 0; index < validFileExtentions.length; index++) {\n        const extension = validFileExtentions[index];\n        if (fileName.toLowerCase().indexOf(extension) != -1) {\n          valid = true;\n          break;\n        }\n      }\n      return valid;\n    }\n    validImgFile(fileName) {\n      let valid = false;\n      let validFileExtentions = ['.jpg', '.jpeg', '.png', '.gif'];\n      for (let index = 0; index < validFileExtentions.length; index++) {\n        const extension = validFileExtentions[index];\n        if (fileName.toLowerCase().indexOf(extension) != -1) {\n          valid = true;\n          break;\n        }\n      }\n      return valid;\n    }\n    addFolder() {\n      if ($('#addFolderInput').val().trim().length == 0) {\n        this.processResponse({\n          error: {\n            message: 'Folder name is empty'\n          }\n        });\n        return;\n      }\n      this.loading = true;\n      this.alertSuccess = true;\n      this.alertMessage = '';\n      $('#addFolder').modal('hide');\n      $('#collapseAddFolder').collapse('hide');\n      this.http.get(environment.serviceUrl + \"addFolder/\" + $('#addFolderInput').val() + '?folderPath=' + this.determineUrlPath(this.selectedDir)).subscribe(resp => this.processResponse(resp));\n    }\n    deleteFolder(dir, e) {\n      e.preventDefault();\n      this.loading = true;\n      this.alertSuccess = true;\n      this.alertMessage = '';\n      if (confirm(\"Delete folder \" + dir.name + \"?\")) {\n        this.http.get(environment.serviceUrl + \"deleteFolder/\" + dir.name + \"?folderPath=\" + this.determineUrlPath(this.selectedDir)).subscribe(resp => this.processResponse(resp));\n      } else {\n        this.loading = false;\n        return;\n      }\n    }\n    processResponse(resp) {\n      this.loading = false;\n      if (resp.error) {\n        this.alertSuccess = false;\n        this.alertMessage = resp.error.message;\n      } else {\n        this.alertMessage = resp.message;\n        this.onDirClick(this.selectedDir);\n      }\n      $('.alert').show();\n      setTimeout(() => {\n        $('.alert').hide();\n      }, 3000);\n    }\n    copyPath(file, e) {\n      e.preventDefault();\n      $('body').append(\"<input id='inputFileUrl' value=\" + this.getFileUrl(file) + \">\");\n      $('#inputFileUrl').select();\n      document.execCommand(\"copy\");\n      $('.toast').toast('show');\n      $('#inputFileUrl').remove();\n    }\n    refresh(e) {\n      e.preventDefault();\n      this.onDirClick(this.selectedDir);\n    }\n    static #_ = this.ɵfac = function FileBrowserComponent_Factory(t) {\n      return new (t || FileBrowserComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FileBrowserComponent,\n      selectors: [[\"app-file-browser\"]],\n      decls: 24,\n      vars: 9,\n      consts: [[3, \"user\"], [\"type\", \"file\", \"id\", \"fileUpload\", \"hidden\", \"\", 3, \"change\"], [\"role\", \"alert\", 1, \"alert\", \"m-2\", 2, \"display\", \"none\"], [4, \"ngIf\"], [\"class\", \"card m-2\", 4, \"ngIf\"], [\"id\", \"addFolder\", \"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-body\", \"d-flex\", \"text-center\"], [\"for\", \"addFolderInput\", 1, \"mr-1\"], [\"id\", \"addFolderInput\", \"autofocus\", \"\", 1, \"form-input\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", \"float-left\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"data-delay\", \"2000\", 1, \"toast\", \"bg-success\", \"text-white\", 2, \"position\", \"fixed\", \"top\", \"40%\", \"right\", \"40%\"], [1, \"toast-body\"], [1, \"fas\", \"fa-4x\", \"fa-spin\", \"fa-circle-notch\", 2, \"position\", \"absolute\", \"top\", \"30%\", \"left\", \"50%\"], [1, \"card\", \"m-2\"], [1, \"card-header\", \"bg-transparent\", \"text-center\"], [1, \"float-left\"], [1, \"fas\", \"fa-arrow-right\"], [1, \"float-right\"], [\"onclick\", \"document.getElementById('fileUpload').click()\", 1, \"btn\", \"btn-sm\", \"btn-primary\", \"mr-1\"], [1, \"fas\", \"fa-upload\"], [\"placeholder\", \"Search in current folder\", 1, \"mr-1\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [\"class\", \"float-left\", 4, \"ngIf\"], [1, \"card-body\", \"row\"], [1, \"col-2\"], [1, \"text-secondary\", \"ml-1\"], [\"href\", \"#collapseAddFolder\", \"data-toggle\", \"collapse\", \"title\", \"Add new folder here\", \"onclick\", \"$('#addFolderInput').val('')\"], [1, \"fas\", \"fa-folder-plus\", \"text-primary\", 2, \"font-size\", \"larger\"], [\"id\", \"collapseAddFolder\", 1, \"collapse\"], [1, \"input-group\", \"mb-2\"], [\"id\", \"addFolderInput\", \"type\", \"text\", \"placeholder\", \"Folder Name\", \"aria-label\", \"Folder Name\", \"aria-describedby\", \"addFolder\", 1, \"form-control\"], [1, \"input-group-append\"], [\"type\", \"button\", \"id\", \"addFolder\", 1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [1, \"list-group\"], [1, \"col-10\"], [1, \"row\", 2, \"padding-top\", \"1.5em\"], [\"class\", \"jumbotron jumbotron-fluid\", 4, \"ngIf\"], [\"class\", \"card col-lg-2 col-md-3 col-sm-6 m-1 shadow\", 4, \"ngFor\", \"ngForOf\"], [\"hidden\", \"\", 1, \"card-footer\"], [\"aria-label\", \"breadcrumb\"], [1, \"breadcrumb\", \"bg-transparent\", 2, \"max-height\", \"15px\"], [1, \"mr-1\"], [1, \"far\", \"fa-folder-open\"], [\"class\", \"breadcrumb-item\", \"aria-current\", \"page\", 4, \"ngFor\", \"ngForOf\"], [1, \"mx-2\"], [\"href\", \"#\", \"title\", \"Refresh Files & Folders\", 3, \"click\"], [1, \"fas\", \"fa-sync\", \"text-secondary\"], [\"aria-current\", \"page\", 1, \"breadcrumb-item\"], [\"href\", \"#\", 1, \"breadcrumb-item-link\", 3, \"click\"], [\"class\", \"list-group-item list-group-item-action\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"list-group-item-action\"], [\"href\", \"#\", 1, \"text-secondary\", 2, \"text-decoration\", \"none\", 3, \"click\"], [1, \"far\", \"fa-folder\"], [\"href\", \"#\", 1, \"float-right\", 3, \"click\", \"title\"], [1, \"far\", \"fa-trash-alt\", \"text-danger\"], [1, \"jumbotron\", \"jumbotron-fluid\"], [1, \"container\"], [1, \"lead\"], [1, \"card\", \"col-lg-2\", \"col-md-3\", \"col-sm-6\", \"m-1\", \"shadow\"], [\"class\", \"card-header bg-transparent\", 4, \"ngIf\"], [1, \"card-body\"], [\"href\", \"#\", 1, \"text-secondary\", 3, \"click\"], [1, \"far\", \"fa-2x\"], [1, \"card-footer\", \"bg-transparent\"], [\"href\", \"#\", \"title\", \"Delete\", 1, \"text-secondary\", \"float-right\", 3, \"click\"], [\"href\", \"#\", \"title\", \"Download\", 1, \"text-secondary\", \"float-right\", \"mx-2\", 3, \"click\"], [1, \"fas\", \"fa-download\", \"text-info\"], [\"href\", \"#\", \"title\", \"Copy File Path to Clipboard\", 1, \"float-right\", \"text-info\", 3, \"click\"], [1, \"far\", \"fa-clipboard\"], [1, \"card-header\", \"bg-transparent\"], [\"href\", \"#\", 3, \"click\"], [2, \"position\", \"relative\", \"height\", \"100%\", \"width\", \"100%\", \"max-height\", \"150px\"]],\n      template: function FileBrowserComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-header\", 0);\n          i0.ɵɵelementStart(1, \"input\", 1);\n          i0.ɵɵlistener(\"change\", function FileBrowserComponent_Template_input_change_1_listener() {\n            return ctx.uploadFile();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"strong\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, FileBrowserComponent_div_6_Template, 2, 0, \"div\", 3)(7, FileBrowserComponent_div_7_Template, 42, 10, \"div\", 4);\n          i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 7)(11, \"div\", 8)(12, \"label\", 9);\n          i0.ɵɵtext(13, \"Folder Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 11)(16, \"button\", 12);\n          i0.ɵɵtext(17, \"Close\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function FileBrowserComponent_Template_button_click_18_listener() {\n            return ctx.addFolder();\n          });\n          i0.ɵɵtext(19, \"Add\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(20, \"div\", 14)(21, \"div\", 15)(22, \"strong\");\n          i0.ɵɵtext(23, \"Copied to Clipboard!\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"user\", ctx.loggedInUser);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"alert-success\", ctx.alertSuccess)(\"alert-danger\", !ctx.alertSuccess);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"\", ctx.alertSuccess ? \"Success!\" : \"Error!\", \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.alertMessage, \"\\n\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.HeaderComponent],\n      styles: [\"a.disabled[_ngcontent-%COMP%]{pointer-events:none;cursor:default}\"]\n    });\n  }\n  return FileBrowserComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}