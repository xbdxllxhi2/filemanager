{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../header/header.component\";\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"small\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.loginMessage);\n  }\n}\nfunction LoginComponent_i_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 16);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(http, router, activatedRoute) {\n      this.http = http;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.user = {\n        username: '',\n        password: ''\n      };\n      this.loading = false;\n      this.loginError = false;\n      this.loginMessage = 'Invalid Username or Password!';\n      this.logout = this.activatedRoute.snapshot.queryParams['logout'];\n      if (this.logout != null && this.logout != undefined) {\n        this.loginError = true;\n        if (this.logout == 'false') this.loginMessage = 'You have either logged out or your previous session has expired. Please login again to continue!';\n        if (this.logout == 'true') this.loginMessage = 'You have successfully logged out!';\n      }\n    }\n    ngOnInit() {\n      let value = sessionStorage.getItem('loggedInUser');\n      if (value != null && value != undefined) this.router.navigate(['browser']);\n    }\n    login(e) {\n      e.preventDefault();\n      this.loading = true;\n      this.loginError = false;\n      if (this.user.username == 'sample' && this.user.password == 'sample') {\n        this.loading = false;\n        sessionStorage.setItem('loggedInUser', JSON.stringify({\n          fname: 'Demo',\n          lname: 'User'\n        }));\n        this.router.navigate(['browser']);\n      } else {\n        this.loginError = true;\n      }\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 22,\n      vars: 4,\n      consts: [[1, \"card\", \"w-25\", \"shadow\", 2, \"position\", \"absolute\", \"top\", \"30%\", \"left\", \"40%\"], [1, \"text-center\", \"text-secondary\", \"font-weight-bold\"], [1, \"card-body\"], [1, \"input-group\", \"input-group-sm\", \"mb-3\"], [\"for\", \"username\", 1, \"pr-2\"], [\"id\", \"username\", \"name\", \"username\", \"type\", \"text\", \"aria-label\", \"Username\", \"aria-describedby\", \"basic-addon2\", 1, \"form-control\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [1, \"input-group-append\"], [\"id\", \"basic-addon2\", 1, \"input-group-text\"], [1, \"input-group\", \"input-group-sm\"], [\"for\", \"password\", 1, \"pr-2\", \"mr-1\"], [\"id\", \"password\", \"name\", \"password\", \"type\", \"password\", \"aria-label\", \"Password\", 1, \"form-control\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [\"class\", \"input-group text-danger mt-1\", 4, \"ngIf\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"mb-2\", 3, \"click\"], [\"class\", \"fas fa-spinner fa-spin\", 4, \"ngIf\"], [1, \"input-group\", \"text-danger\", \"mt-1\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-header\");\n          i0.ɵɵelementStart(1, \"form\")(2, \"div\", 0)(3, \"div\", 1);\n          i0.ɵɵtext(4, \"Please login to continue\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"label\", 4);\n          i0.ɵɵtext(8, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.username, $event) || (ctx.user.username = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"input\", function LoginComponent_Template_input_input_9_listener() {\n            return ctx.loginError = false;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"span\", 7);\n          i0.ɵɵtext(12, \"@demo.com\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"div\", 8)(14, \"label\", 9);\n          i0.ɵɵtext(15, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"input\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_16_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.password, $event) || (ctx.user.password = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"input\", function LoginComponent_Template_input_input_16_listener() {\n            return ctx.loginError = false;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 3, 1, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 12)(19, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener($event) {\n            return ctx.login($event);\n          });\n          i0.ɵɵtext(20, \"Login \");\n          i0.ɵɵtemplate(21, LoginComponent_i_21_Template, 1, 0, \"i\", 14);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.username);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.password);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i5.HeaderComponent]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}